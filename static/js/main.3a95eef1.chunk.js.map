{"version":3,"sources":["components/Container/Container.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Container","children","className","style","Section","title","propType","PropType","string","isRequired","FeedbackOptions","option","onLeaveFeedback","btn","map","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","number","Notification","message","App","state","handleIncreament","setState","prevState","countTotalFeedback","countpositivePercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a95eef1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2e_9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3YNoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3XBpG\",\"item\":\"Statistics_item__2u8Vy\"};","import React from \"react\";\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.Container}>{children}</div>;\r\n    \r\nexport default Container;","import PropType from 'prop-types';\r\nimport style from './Section';\r\nconst Section = ({ title, children }) => (\r\n    <section>\r\n        <h1 className={style.title}>{title}\r\n        </h1>\r\n        {children}\r\n\r\n    </section>\r\n)\r\nSection.propType = {\r\n    title: PropType.string.isRequired,\r\n}\r\nexport default Section","import PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ option, onLeaveFeedback }) => {\r\n    return (\r\n    <div className={style.btn}>\r\n        {option.map((option) => (\r\n            <button className={style.button}\r\n                key={option}\r\n                type=\"button\"\r\n                name={option}\r\n                onClick={() => onLeaveFeedback(option)}>{option}\r\n            </button>\r\n        ))}\r\n    </div>)\r\n}\r\nFeedbackOptions.propTypes = {\r\n    option: PropTypes.arrayOf(PropTypes.string.isRequired,\r\n    )\r\n}\r\nexport default FeedbackOptions;","import PropType from 'prop-types';\r\nimport style from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <ul className={style.list}>\r\n            <li className={style.item}>Good: {good}</li>\r\n            <li className={style.item}>Neutral: {neutral}</li>\r\n            <li className={style.item}>Bad: {bad}</li>\r\n            <li className={style.item}>Total: {total}</li>\r\n            <li className={style.item}>Positive feedback: {positivePercentage}%</li>\r\n\r\n        </ul>\r\n    );\r\n}\r\nStatistics.propType = {\r\n    good: PropType.number.isRequired,\r\n    neutral: PropType.number.isRequired,\r\n    bad: PropType.number.isRequired,\r\n    total: PropType.number.isRequired,\r\n    positivePercentage: PropType.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import PropType from 'prop-types';\r\nimport style from './Notification.module.css';\r\nconst Notification = ({ message }) => <p className={style.title}>{message}</p>;\r\n\r\nNotification.propType = {\r\n    message:PropType.string.isRequired,\r\n}\r\nexport default Notification;\r\n","import React from \"react\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport Container from \"./components/Container\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification/Notification.jsx\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleIncreament = (name) => {\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n  countpositivePercentage = () =>\n    this.state.good\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\"></Section>\n        <FeedbackOptions\n          option={Object.keys(this.state)}\n          onLeaveFeedback={this.handleIncreament}\n        />\n        <Section title=\"Statistics\" />\n        {this.countTotalFeedback() ? (\n          \n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countpositivePercentage()}\n            />\n         \n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3Uq3O\",\"button\":\"FeedbackOptions_button__2gRqj\"};"],"sourceRoot":""}